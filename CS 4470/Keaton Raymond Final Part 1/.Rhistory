theme(plot.title = element_text(hjust = 0.5, vjust = 0, size = 20, face = 'bold'))
#create the radar plot for latin america
latinChart = ggradar(worldEnergyData[c(1,7),], grid.min = 0, grid.mid = 37.5,
grid.max = 75, plot.legend = FALSE,
group.colours = colors, fill = TRUE, fill.alpha = 0.6,
group.point.size = 0, grid.label.size = 0) +
ggtitle("Lantin America") +
theme(plot.title = element_text(hjust = 0.5, vjust = 0, size = 20, face = 'bold'))
gridTitle = textGrob("World energy mix", gp=gpar(fontsize=30, font=2), hjust=0, x=0)
gridSubtitle = textGrob("Shares of different energy types in total energy use", gp=gpar(fontsize=15, font=3), hjust=0, x=0)
#arrange the 6 charts onto the picture
charts = grid.arrange(oecdChart, transitionChart, middleEastChart, asiaChart, africaChart, latinChart, nrow = 2)
grid.arrange(gridTitle, gridSubtitle, charts, heights = unit.c(grobHeight(gridTitle) + 1.2*(unit(0.5, "line")), grobHeight(gridSubtitle) + unit(0.5, "line"), unit(1, "null")))
dev.off()
##Keaton Raymond
#CS 4470-001
#load libraries
library(ggplot2)
library(ggpol)
#png for the final figure
png("Figures/barChart.png", width=8, height=9, units="in", res=108)
#create the age structure dataframe with the "age" and the data from 2010
menAgeStructureFrame = data.frame(col1 = c(1:nrow(menData)), col2 = menData$"2010")
#rename the columns of the age structure dataframe
colnames(menAgeStructureFrame) = c("Age", "AgeStructure")
#same as above but for women
womenAgeStructureFrame = data.frame(col1 = c(1:nrow(womenData)), col2 = womenData$"2010")
colnames(womenAgeStructureFrame) = c("Age", "AgeStructure")
#add a "gender" column to each to differentiate
menAgeStructureFrame$Gender = "Men"
womenAgeStructureFrame$Gender = "Women"
#add a "color" column to be able to change the colors for each of the age groups
menAgeStructureFrame$Color = NA
menAgeStructureFrame$Color[c(1:15)] = "lightgray"
menAgeStructureFrame$Color[c(16:65)] = "darkgray"
menAgeStructureFrame$Color[c(66:nrow(menAgeStructureFrame))] = "coral"
#same as above but for women
womenAgeStructureFrame$Color = NA
womenAgeStructureFrame$Color[c(1:15)] = "lightgray"
womenAgeStructureFrame$Color[c(16:65)] = "darkgray"
womenAgeStructureFrame$Color[c(66:nrow(menAgeStructureFrame))] = "coral"
#flip the sign of the "men" values so that it faces the other direction
menAgeStructureFrame$AgeStructure = menAgeStructureFrame$AgeStructure*-1
#put the dataframes into one to create the chart
chartFrame = rbind(menAgeStructureFrame, womenAgeStructureFrame)
#create the chart
finalChart = ggplot(chartFrame, aes(x = Age, y = AgeStructure, fill = Color)) + #set chart params
geom_bar(stat = "identity", show.legend = FALSE, width = 1) + #bar chart with no legend and thicker bars
facet_share(~Gender, dir = "h", scales = "free", reverse_num = TRUE) + #built 2 panels with a shared axis, reverse_num makes it so that the axis for men isnt negative
#coord_flip() + #turn the plot sideways
scale_y_continuous(breaks = seq(-600, 600, by = 200), expand = c(0,0)) +
scale_x_continuous(breaks = seq(10, 90, by=10)) +
labs(y="", x="working age", title = "Age structure of the population in Germany in 2010",
subtitle = "Values in thousands per year of age") +
theme_classic() +
theme(axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.text.x = element_text(vjust = 12),
axis.ticks.y = element_line(linewidth = 0),
axis.text.y = element_text(size = 15),
strip.background = element_blank(),
strip.text.x = element_text(size = 15, color = "gray", face = "bold", vjust = -1),
plot.title = element_text(size = 18, hjust = -0.3),
plot.subtitle = element_text(size = 10, face = "italic", hjust = -0.1)) +
annotate("rect", xmin = 16, xmax = 66, ymin = -Inf, ymax = Inf, fill = "gray", alpha = 0.5) +
scale_fill_manual(values = c("lightgray" = "lightgray", "darkgray" = "darkgray", "coral" = "coral"))
print(finalChart)
dev.off()
##Keaton Raymond
#CS 4470-001
#load libraries
library(ggplot2)
library(ggpol)
#png for the final figure
png("Figures/barChart.png", width=8, height=9, units="in", res=108)
#create the age structure dataframe with the "age" and the data from 2010
menAgeStructureFrame = data.frame(col1 = c(1:nrow(menData)), col2 = menData$"2010")
#rename the columns of the age structure dataframe
colnames(menAgeStructureFrame) = c("Age", "AgeStructure")
#same as above but for women
womenAgeStructureFrame = data.frame(col1 = c(1:nrow(womenData)), col2 = womenData$"2010")
colnames(womenAgeStructureFrame) = c("Age", "AgeStructure")
#add a "gender" column to each to differentiate
menAgeStructureFrame$Gender = "Men"
womenAgeStructureFrame$Gender = "Women"
#add a "color" column to be able to change the colors for each of the age groups
menAgeStructureFrame$Color = NA
menAgeStructureFrame$Color[c(1:15)] = "lightgray"
menAgeStructureFrame$Color[c(16:65)] = "darkgray"
menAgeStructureFrame$Color[c(66:nrow(menAgeStructureFrame))] = "coral"
#same as above but for women
womenAgeStructureFrame$Color = NA
womenAgeStructureFrame$Color[c(1:15)] = "lightgray"
womenAgeStructureFrame$Color[c(16:65)] = "darkgray"
womenAgeStructureFrame$Color[c(66:nrow(menAgeStructureFrame))] = "coral"
#flip the sign of the "men" values so that it faces the other direction
menAgeStructureFrame$AgeStructure = menAgeStructureFrame$AgeStructure*-1
#put the dataframes into one to create the chart
chartFrame = rbind(menAgeStructureFrame, womenAgeStructureFrame)
#create the chart
finalChart = ggplot(chartFrame, aes(x = Age, y = AgeStructure, fill = Color)) + #set chart params
geom_bar(stat = "identity", show.legend = FALSE, width = 1) + #bar chart with no legend and thicker bars
facet_share(~Gender, dir = "h", scales = "free", reverse_num = TRUE) + #built 2 panels with a shared axis, reverse_num makes it so that the axis for men isnt negative
#coord_flip() + #turn the plot sideways
scale_y_continuous(breaks = seq(-600, 600, by = 200), expand = c(0,0)) +
scale_x_continuous(breaks = seq(10, 90, by=10)) +
labs(y="", x="working age", title = "Age structure of the population in Germany in 2010",
subtitle = "Values in thousands per year of age") +
theme_classic() +
theme(axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.text.x = element_text(vjust = 12),
axis.ticks.y = element_line(linewidth = 0),
axis.text.y = element_text(size = 15),
strip.background = element_blank(),
strip.text.x = element_text(size = 15, color = "gray", face = "bold", vjust = -1),
plot.title = element_text(size = 18, hjust = -0.3),
plot.subtitle = element_text(size = 10, face = "italic", hjust = -0.1)) +
annotate("rect", xmin = 16, xmax = 66, ymin = -Inf, ymax = Inf, fill = "gray", alpha = 0.5) +
scale_fill_manual(values = c("lightgray" = "lightgray", "darkgray" = "darkgray", "coral" = "coral"))
print(finalChart)
dev.off()
##Keaton Raymond
#CS 4470-001
#load libraries
library(ggplot2)
library(ggpol)
#png for the final figure
png("Figures/barChart.png", width=8, height=9, units="in", res=108)
#create the age structure dataframe with the "age" and the data from 2010
menAgeStructureFrame = data.frame(col1 = c(1:nrow(menData)), col2 = menData$"2010")
#rename the columns of the age structure dataframe
colnames(menAgeStructureFrame) = c("Age", "AgeStructure")
#same as above but for women
womenAgeStructureFrame = data.frame(col1 = c(1:nrow(womenData)), col2 = womenData$"2010")
colnames(womenAgeStructureFrame) = c("Age", "AgeStructure")
#add a "gender" column to each to differentiate
menAgeStructureFrame$Gender = "Men"
womenAgeStructureFrame$Gender = "Women"
#add a "color" column to be able to change the colors for each of the age groups
menAgeStructureFrame$Color = NA
menAgeStructureFrame$Color[c(1:15)] = "lightgray"
menAgeStructureFrame$Color[c(16:65)] = "darkgray"
menAgeStructureFrame$Color[c(66:nrow(menAgeStructureFrame))] = "coral"
#same as above but for women
womenAgeStructureFrame$Color = NA
womenAgeStructureFrame$Color[c(1:15)] = "lightgray"
womenAgeStructureFrame$Color[c(16:65)] = "darkgray"
womenAgeStructureFrame$Color[c(66:nrow(menAgeStructureFrame))] = "coral"
#flip the sign of the "men" values so that it faces the other direction
menAgeStructureFrame$AgeStructure = menAgeStructureFrame$AgeStructure*-1
#put the dataframes into one to create the chart
chartFrame = rbind(menAgeStructureFrame, womenAgeStructureFrame)
#create the chart
finalChart = ggplot(chartFrame, aes(x = Age, y = AgeStructure, fill = Color)) + #set chart params
geom_bar(stat = "identity", show.legend = FALSE, width = 1) + #bar chart with no legend and thicker bars
facet_share(~Gender, dir = "h", scales = "free", reverse_num = TRUE) + #built 2 panels with a shared axis, reverse_num makes it so that the axis for men isnt negative
coord_flip() + #turn the plot sideways
scale_y_continuous(breaks = seq(-600, 600, by = 200), expand = c(0,0)) +
scale_x_continuous(breaks = seq(10, 90, by=10)) +
labs(y="", x="working age", title = "Age structure of the population in Germany in 2010",
subtitle = "Values in thousands per year of age") +
theme_classic() +
theme(axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.text.x = element_text(vjust = 12),
axis.ticks.y = element_line(linewidth = 0),
axis.text.y = element_text(size = 15),
strip.background = element_blank(),
strip.text.x = element_text(size = 15, color = "gray", face = "bold", vjust = -1),
plot.title = element_text(size = 18, hjust = -0.3),
plot.subtitle = element_text(size = 10, face = "italic", hjust = -0.1)) +
annotate("rect", xmin = 16, xmax = 66, ymin = -Inf, ymax = Inf, fill = "gray", alpha = 0.5) +
scale_fill_manual(values = c("lightgray" = "lightgray", "darkgray" = "darkgray", "coral" = "coral"))
print(finalChart)
dev.off()
##Keaton Raymond
#CS 4470-001
#load libraries
library(ggplot2)
library(ggpol)
#png for the final figure
png("Figures/barChart.png", width=8, height=9, units="in", res=108)
#create the age structure dataframe with the "age" and the data from 2010
menAgeStructureFrame = data.frame(col1 = c(1:nrow(menData)), col2 = menData$"2010")
#rename the columns of the age structure dataframe
colnames(menAgeStructureFrame) = c("Age", "AgeStructure")
#same as above but for women
womenAgeStructureFrame = data.frame(col1 = c(1:nrow(womenData)), col2 = womenData$"2010")
colnames(womenAgeStructureFrame) = c("Age", "AgeStructure")
#add a "gender" column to each to differentiate
menAgeStructureFrame$Gender = "Men"
womenAgeStructureFrame$Gender = "Women"
#add a "color" column to be able to change the colors for each of the age groups
menAgeStructureFrame$Color = NA
menAgeStructureFrame$Color[c(1:15)] = "lightgray"
menAgeStructureFrame$Color[c(16:65)] = "darkgray"
menAgeStructureFrame$Color[c(66:nrow(menAgeStructureFrame))] = "coral"
#same as above but for women
womenAgeStructureFrame$Color = NA
womenAgeStructureFrame$Color[c(1:15)] = "lightgray"
womenAgeStructureFrame$Color[c(16:65)] = "darkgray"
womenAgeStructureFrame$Color[c(66:nrow(menAgeStructureFrame))] = "coral"
#flip the sign of the "men" values so that it faces the other direction
menAgeStructureFrame$AgeStructure = menAgeStructureFrame$AgeStructure*-1
#put the dataframes into one to create the chart
chartFrame = rbind(menAgeStructureFrame, womenAgeStructureFrame)
#create the chart
finalChart = ggplot(chartFrame, aes(x = Age, y = AgeStructure, fill = Color)) + #set chart params
geom_bar(stat = "identity", show.legend = FALSE, width = 1) + #bar chart with no legend and thicker bars
facet_share(~Gender, dir = "h", scales = "free", reverse_num = TRUE) + #built 2 panels with a shared axis, reverse_num makes it so that the axis for men isnt negative
coord_flip() + #turn the plot sideways
scale_y_continuous(breaks = seq(-600, 600, by = 200), expand = c(0,0)) + #
scale_x_continuous(breaks = seq(10, 90, by=10), expand = c(0,0)) +
labs(y="", x="working age", title = "Age structure of the population in Germany in 2010",
subtitle = "Values in thousands per year of age") +
theme_classic() +
theme(axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.text.x = element_text(vjust = 12),
axis.ticks.y = element_line(linewidth = 0),
axis.text.y = element_text(size = 15),
strip.background = element_blank(),
strip.text.x = element_text(size = 15, color = "gray", face = "bold", vjust = -1),
plot.title = element_text(size = 18, hjust = -0.3),
plot.subtitle = element_text(size = 10, face = "italic", hjust = -0.1)) +
annotate("rect", xmin = 16, xmax = 66, ymin = -Inf, ymax = Inf, fill = "gray", alpha = 0.5) +
scale_fill_manual(values = c("lightgray" = "lightgray", "darkgray" = "darkgray", "coral" = "coral"))
print(finalChart)
dev.off()
##Keaton Raymond
#CS 4470-001
#load libraries
library(ggplot2)
library(ggpol)
#png for the final figure
png("Figures/barChart.png", width=8, height=9, units="in", res=108)
#create the age structure dataframe with the "age" and the data from 2010
menAgeStructureFrame = data.frame(col1 = c(1:nrow(menData)), col2 = menData$"2010")
#rename the columns of the age structure dataframe
colnames(menAgeStructureFrame) = c("Age", "AgeStructure")
#same as above but for women
womenAgeStructureFrame = data.frame(col1 = c(1:nrow(womenData)), col2 = womenData$"2010")
colnames(womenAgeStructureFrame) = c("Age", "AgeStructure")
#add a "gender" column to each to differentiate
menAgeStructureFrame$Gender = "Men"
womenAgeStructureFrame$Gender = "Women"
#add a "color" column to be able to change the colors for each of the age groups
menAgeStructureFrame$Color = NA
menAgeStructureFrame$Color[c(1:15)] = "lightgray"
menAgeStructureFrame$Color[c(16:65)] = "darkgray"
menAgeStructureFrame$Color[c(66:nrow(menAgeStructureFrame))] = "coral"
#same as above but for women
womenAgeStructureFrame$Color = NA
womenAgeStructureFrame$Color[c(1:15)] = "lightgray"
womenAgeStructureFrame$Color[c(16:65)] = "darkgray"
womenAgeStructureFrame$Color[c(66:nrow(menAgeStructureFrame))] = "coral"
#flip the sign of the "men" values so that it faces the other direction
menAgeStructureFrame$AgeStructure = menAgeStructureFrame$AgeStructure*-1
#put the dataframes into one to create the chart
chartFrame = rbind(menAgeStructureFrame, womenAgeStructureFrame)
#create the chart
finalChart = ggplot(chartFrame, aes(x = Age, y = AgeStructure, fill = Color)) + #set chart params
geom_bar(stat = "identity", show.legend = FALSE, width = 1) + #bar chart with no legend and thicker bars
facet_share(~Gender, dir = "h", scales = "free", reverse_num = TRUE) + #built 2 panels with a shared axis, reverse_num makes it so that the axis for men isnt negative
coord_flip() + #turn the plot sideways
scale_y_continuous(breaks = seq(-600, 600, by = 200), expand = c(0,0)) + #
scale_x_continuous(breaks = seq(10, 90, by=10)) +
labs(y="", x="working age", title = "Age structure of the population in Germany in 2010",
subtitle = "Values in thousands per year of age") +
theme_classic() +
theme(axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.text.x = element_text(vjust = 12),
axis.ticks.y = element_line(linewidth = 0),
axis.text.y = element_text(size = 15),
strip.background = element_blank(),
strip.text.x = element_text(size = 15, color = "gray", face = "bold", vjust = -1),
plot.title = element_text(size = 18, hjust = -0.3),
plot.subtitle = element_text(size = 10, face = "italic", hjust = -0.1)) +
annotate("rect", xmin = 16, xmax = 66, ymin = -Inf, ymax = Inf, fill = "gray", alpha = 0.5) +
scale_fill_manual(values = c("lightgray" = "lightgray", "darkgray" = "darkgray", "coral" = "coral"))
print(finalChart)
dev.off()
##Keaton Raymond
#CS 4470-001
#load libraries
library(ggplot2)
library(ggpol)
#png for the final figure
png("Figures/barChart.png", width=8, height=9, units="in", res=108)
#create the age structure dataframe with the "age" and the data from 2010
menAgeStructureFrame = data.frame(col1 = c(1:nrow(menData)), col2 = menData$"2010")
#rename the columns of the age structure dataframe
colnames(menAgeStructureFrame) = c("Age", "AgeStructure")
#same as above but for women
womenAgeStructureFrame = data.frame(col1 = c(1:nrow(womenData)), col2 = womenData$"2010")
colnames(womenAgeStructureFrame) = c("Age", "AgeStructure")
#add a "gender" column to each to differentiate
menAgeStructureFrame$Gender = "Men"
womenAgeStructureFrame$Gender = "Women"
#add a "color" column to be able to change the colors for each of the age groups
menAgeStructureFrame$Color = NA
menAgeStructureFrame$Color[c(1:15)] = "lightgray"
menAgeStructureFrame$Color[c(16:65)] = "darkgray"
menAgeStructureFrame$Color[c(66:nrow(menAgeStructureFrame))] = "coral"
#same as above but for women
womenAgeStructureFrame$Color = NA
womenAgeStructureFrame$Color[c(1:15)] = "lightgray"
womenAgeStructureFrame$Color[c(16:65)] = "darkgray"
womenAgeStructureFrame$Color[c(66:nrow(menAgeStructureFrame))] = "coral"
#flip the sign of the "men" values so that it faces the other direction
menAgeStructureFrame$AgeStructure = menAgeStructureFrame$AgeStructure*-1
#put the dataframes into one to create the chart
chartFrame = rbind(menAgeStructureFrame, womenAgeStructureFrame)
#create the chart
finalChart = ggplot(chartFrame, aes(x = Age, y = AgeStructure, fill = Color)) + #set chart params
geom_bar(stat = "identity", show.legend = FALSE, width = 1) + #bar chart with no legend and thicker bars
facet_share(~Gender, dir = "h", scales = "free", reverse_num = TRUE) + #built 2 panels with a shared axis, reverse_num makes it so that the axis for men isnt negative
coord_flip() + #turn the plot sideways
scale_y_continuous(breaks = seq(-600, 600, by = 200), expand = c(0,0)) + #set the y axis ticks
scale_x_continuous(breaks = seq(10, 90, by=10)) + #set the x axis ticks
labs(y="", x="working age", title = "Age structure of the population in Germany in 2010",
subtitle = "Values in thousands per year of age") + #set labels for axes and title/subtitle
theme_classic() + #removes the grid background
theme(axis.ticks.x = element_blank(), #remove x axis ticks
axis.line.x = element_blank(), #remove x axis line
axis.text.x = element_text(vjust = 12), #move x axis text up
axis.ticks.y = element_line(linewidth = 0),  #remove y axis ticks
axis.text.y = element_text(size = 15), #make y axis labels larger
strip.background = element_blank(), #remove background from "Men" and "Women" title
strip.text.x = element_text(size = 15, color = "gray", face = "bold", vjust = -1), #change text for "Men" and "Women" titles
plot.title = element_text(size = 18, hjust = -0.3), #change the size and placement of title
plot.subtitle = element_text(size = 10, face = "italic", hjust = -0.1)) + #change size and placement of subtitle
annotate("rect", xmin = 16, xmax = 66, ymin = -Inf, ymax = Inf, fill = "gray", alpha = 0.5) + #add the transparent gray box
scale_fill_manual(values = c("lightgray" = "lightgray", "darkgray" = "darkgray", "coral" = "coral")) #set the colors to the proper values
#print the chart to the png
print(finalChart)
dev.off()
#Keaton Raymond
#CS 4470-001
library(readxl)
#read in the world energy data excel sheet
worldEnergyData = read_excel("Data/worldenergymix.xlsx")
#reorder columns to be in same order as assignment
worldEnergyData = worldEnergyData[,c(1, 3, 2, 6, 5, 4)]
#create a blank list for the "year" column names
yearList = c()
year = 1949 #the start year
#for loop creating the year name list
for (i in seq(1, 111, by=1))
{
yearList[i] = year
year = year+1
}
#import the men and women data with the column names equal to the year list
#header = FALSE makes the function read all of the data in the text files as values as opposed to reading the first as the header value
#check.names = FALSE makes it so that R doesn't insert an X before the year for the col name. i.e. 1950 vs. X1950
menData = read.csv("Data/men.txt", col.names = yearList, header = FALSE, check.names = FALSE)
womenData = read.csv("Data/women.txt", col.names = yearList, header = FALSE, check.names = FALSE)
#Keaton Raymond
#CS 4470-001
#explanation of differences between my plots and the ones given:
#I tried creating radar charts four different ways.
#first I tried fmsb, however I was unable to change the shape of the overall chart to be circular.
#then I tried to use polar coordinates using ggplot2, but that had its own issues with not closing the polygons for example
#then I tried ggiraphExtra, but was unable to create an even remotely accurate chart
#finally I settled on ggradar, which isn't perfect but as close as I could get.
#the opacity is different because no matter what I tried I was unable to put the red polygon on top of the gray one,
#   so I settled on changing the opacity.
#I was unable to add more grid lines
#the scaling was difficult as I was just sort of making an educated guess
#the graphs look a little bit different scaling wise because in my charts there is a small circle that it considers to be 0,
#   but it looks like the given charts use a point as zero.
#I am not sure what exactly the gray polygon is in the given graphs, it looks like it is some sort of a constant,
#   but I assumed that it is just the graph for "world" which would make the most sense and is what I decided to do,
#   even though it doesn't look exactly the same.
#overall, while my graphs do look different, working with the information that we were given,
#   I believe that I did a pretty good job recreating the charts.
#load libraries
library(ggplot2)
library(dplyr)
library(gridExtra)
library(grid)
#these two lines used to install the ggradar package, if that is needed, uncomment and run
#library(devtools) #needed to use install_github
#install_github("ricardo-bion/ggradar", dependencies = TRUE) #used to install ggradar
library("ggradar")
#png for the figures
png("Figures/radarChart.png", width=15, height=11, units="in", res=108)
#color vector for the 2 colors on the radar chart
colors = c("red", "gray")
#explanation of function:
#ggradar() is from the ggradar library and it allows me to create radar plot
#worldEnergyData[c(1,2),] tells the function to use the first and second rows of the data frame
#grid.min sets the minimum line for the chart
#grid.mid sets the 50% line for the chart
#grid.max sets the outside line for the chart
#plot.legend toggles if the plot has a legend
#group.colors sets the colors to be the 2 defined above
#fill fills the polygons with the color vs. just an outline
#fill.alpha sets the opacity of the fill
#group.point.size sets the size of the points to 0 so there are no points, only lines
#grid.label.size sets the size of the grid line labels to 0 so they do not appear
#ggtitle() changes the title of the plot
#theme() sets the theme of the title to be centered, size 20 font, and bold
#create the radar chart for oecd
oecdChart = ggradar(worldEnergyData[c(1,2),], grid.min = 0, grid.mid = 37.5,
grid.max = 75, plot.legend = FALSE,
group.colours = colors, fill = TRUE, fill.alpha = 0.6,
group.point.size = 0, grid.label.size = 0) +
ggtitle("OECD") +
theme(plot.title = element_text(hjust = 0.5, vjust = 0, size = 20, face = 'bold'))
#create the radar plot for asia
asiaChart = ggradar(worldEnergyData[c(1,3),], grid.min = 0, grid.mid = 37.5,
grid.max = 75, plot.legend = FALSE,
group.colours = colors, fill = TRUE, fill.alpha = 0.6,
group.point.size = 0, grid.label.size = 0) +
ggtitle("Asia") +
theme(plot.title = element_text(hjust = 0.5, vjust = 0, size = 20, face = 'bold'))
#create the radar plot for the transition countries
transitionChart = ggradar(worldEnergyData[c(1,4),], grid.min = 0, grid.mid = 37.5,
grid.max = 75, plot.legend = FALSE,
group.colours = colors, fill = TRUE, fill.alpha = 0.6,
group.point.size = 0, grid.label.size = 0) +
ggtitle("Transition Countries") +
theme(plot.title = element_text(hjust = 0.5, vjust = 0, size = 20, face = 'bold'))
#create the radar plot for africa
africaChart = ggradar(worldEnergyData[c(1,5),], grid.min = 0, grid.mid = 37.5,
grid.max = 75, plot.legend = FALSE,
group.colours = colors, fill = TRUE, fill.alpha = 0.6,
group.point.size = 0, grid.label.size = 0) +
ggtitle("Africa") +
theme(plot.title = element_text(hjust = 0.5, vjust = 0, size = 20, face = 'bold'))
#create the radar plot for the middle east
middleEastChart = ggradar(worldEnergyData[c(1,6),], grid.min = 0, grid.mid = 37.5,
grid.max = 75, plot.legend = FALSE,
group.colours = colors, fill = TRUE, fill.alpha = 0.6,
group.point.size = 0, grid.label.size = 0) +
ggtitle("Middle East") +
theme(plot.title = element_text(hjust = 0.5, vjust = 0, size = 20, face = 'bold'))
#create the radar plot for latin america
latinChart = ggradar(worldEnergyData[c(1,7),], grid.min = 0, grid.mid = 37.5,
grid.max = 75, plot.legend = FALSE,
group.colours = colors, fill = TRUE, fill.alpha = 0.6,
group.point.size = 0, grid.label.size = 0) +
ggtitle("Lantin America") +
theme(plot.title = element_text(hjust = 0.5, vjust = 0, size = 20, face = 'bold'))
#create the two text objects for the title and subtitle, title in bold and subtitle in italic, and left justified
gridTitle = textGrob("World energy mix", gp=gpar(fontsize=30, font=2), hjust=0, x=0)
gridSubtitle = textGrob("Shares of different energy types in total energy use", gp=gpar(fontsize=15, font=3), hjust=0, x=0)
#arrange the 6 charts onto their own grid
charts = grid.arrange(oecdChart, transitionChart, middleEastChart, asiaChart, africaChart, latinChart, nrow = 2)
#arrange the title, subtitle, and grids onto the image
grid.arrange(gridTitle, gridSubtitle, charts,
heights = unit.c(grobHeight(gridTitle) + 1.2*(unit(0.5, "line")), grobHeight(gridSubtitle) + unit(0.5, "line"), unit(1, "null")))
dev.off()
##Keaton Raymond
#CS 4470-001
#load libraries
library(ggplot2)
library(ggpol)
#png for the final figure
png("Figures/barChart.png", width=8, height=9, units="in", res=108)
#create the age structure dataframe with the "age" and the data from 2010
menAgeStructureFrame = data.frame(col1 = c(1:nrow(menData)), col2 = menData$"2010")
#rename the columns of the age structure dataframe
colnames(menAgeStructureFrame) = c("Age", "AgeStructure")
#same as above but for women
womenAgeStructureFrame = data.frame(col1 = c(1:nrow(womenData)), col2 = womenData$"2010")
colnames(womenAgeStructureFrame) = c("Age", "AgeStructure")
#add a "gender" column to each to differentiate
menAgeStructureFrame$Gender = "Men"
womenAgeStructureFrame$Gender = "Women"
#add a "color" column to be able to change the colors for each of the age groups
menAgeStructureFrame$Color = NA
menAgeStructureFrame$Color[c(1:15)] = "lightgray"
menAgeStructureFrame$Color[c(16:65)] = "darkgray"
menAgeStructureFrame$Color[c(66:nrow(menAgeStructureFrame))] = "coral"
#same as above but for women
womenAgeStructureFrame$Color = NA
womenAgeStructureFrame$Color[c(1:15)] = "lightgray"
womenAgeStructureFrame$Color[c(16:65)] = "darkgray"
womenAgeStructureFrame$Color[c(66:nrow(menAgeStructureFrame))] = "coral"
#flip the sign of the "men" values so that it faces the other direction
menAgeStructureFrame$AgeStructure = menAgeStructureFrame$AgeStructure*-1
#put the dataframes into one to create the chart
chartFrame = rbind(menAgeStructureFrame, womenAgeStructureFrame)
#create the chart
finalChart = ggplot(chartFrame, aes(x = Age, y = AgeStructure, fill = Color)) + #set chart params
geom_bar(stat = "identity", show.legend = FALSE, width = 1) + #bar chart with no legend and thicker bars
facet_share(~Gender, dir = "h", scales = "free", reverse_num = TRUE) + #built 2 panels with a shared axis, reverse_num makes it so that the axis for men isnt negative
coord_flip() + #turn the plot sideways
scale_y_continuous(breaks = seq(-600, 600, by = 200), expand = c(0,0)) + #set the y axis ticks
scale_x_continuous(breaks = seq(10, 90, by=10)) + #set the x axis ticks
labs(y="", x="working age", title = "Age structure of the population in Germany in 2010",
subtitle = "Values in thousands per year of age") + #set labels for axes and title/subtitle
theme_classic() + #removes the grid background
theme(axis.ticks.x = element_blank(), #remove x axis ticks
axis.line.x = element_blank(), #remove x axis line
axis.text.x = element_text(vjust = 12), #move x axis text up
axis.ticks.y = element_line(linewidth = 0),  #remove y axis ticks
axis.text.y = element_text(size = 15), #make y axis labels larger
strip.background = element_blank(), #remove background from "Men" and "Women" title
strip.text.x = element_text(size = 15, color = "gray", face = "bold", vjust = -1), #change text for "Men" and "Women" titles
plot.title = element_text(size = 18, hjust = -0.3), #change the size and placement of title
plot.subtitle = element_text(size = 10, face = "italic", hjust = -0.1)) + #change size and placement of subtitle
annotate("rect", xmin = 16, xmax = 66, ymin = -Inf, ymax = Inf, fill = "gray", alpha = 0.5) + #add the transparent gray box
scale_fill_manual(values = c("lightgray" = "lightgray", "darkgray" = "darkgray", "coral" = "coral")) #set the colors to the proper values
#print the chart to the png
print(finalChart)
dev.off()
