Keaton Raymond CS4100 Lexical Analyzer, Fall 2022
Lexical for /Volumes/K_SANDISK/CS 4100/Homework 4 Submission/LexicalTestFA22.txt
0001 
0002 
0003 
0004 
0005 {Here is Lexical Test file 1 # *) which 
0006   has a comment that
0007   spans 3 lines, followed by an empty comment }
0008 {}
0009 
0010 amount:=1;
	IDENT | 	0050 | 	amount
	EQUAL | 	0037 | 	:=
	_INT_ | 	0051 | 	1
	SEMCO | 	0036 | 	;
0011 b:=a+b-c*21.7/22;
	IDENT | 	0050 | 	b
	EQUAL | 	0037 | 	:=
	IDENT | 	0050 | 	a
	ADD__ | 	0032 | 	+
	IDENT | 	0050 | 	b
	SUBTR | 	0033 | 	-
	IDENT | 	0050 | 	c
	MULTI | 	0031 | 	*
	FLOAT | 	0052 | 	21.7
	DIVID | 	0030 | 	/
	_INT_ | 	0051 | 	22
	SEMCO | 	0036 | 	;
0012      123456789112345 (*this number is 15 chars, truncate int to 6 *)
**** ERROR FOUND: Numeric constant too long
	_INT_ | 	0051 | 	123456
0013      12.34567891134567 (*this number is 17 chars, but should be 
**** ERROR FOUND: Numeric constant too long
	FLOAT | 	0052 | 	12.345678911
0014 	                     truncated to 12 in the symbol table*)
0015 hereisareallylongidentifierthatistoolong := 66;
**** ERROR FOUND: Identifier too long
	IDENT | 	0050 | 	hereisareallylongide
	EQUAL | 	0037 | 	:=
	_INT_ | 	0051 | 	66
	SEMCO | 	0036 | 	;
0016 hereisareallylongidentifierthatissameasabovewhentruncated := 76.5E-12;
**** ERROR FOUND: Identifier too long
	IDENT | 	0050 | 	hereisareallylongide
	EQUAL | 	0037 | 	:=
**** ERROR FOUND: Invalid number.
	INVAL | 	0099 | 	76.5E
	SUBTR | 	0033 | 	-
	_INT_ | 	0051 | 	12
	SEMCO | 	0036 | 	;
0017   109.E+10      12.33E5 
**** ERROR FOUND: Invalid number.
	INVAL | 	0099 | 	109.E
	ADD__ | 	0032 | 	+
	_INT_ | 	0051 | 	10
	FLOAT | 	0052 | 	12.33E5
0018   12.4 E-2
	FLOAT | 	0052 | 	12.4
	IDENT | 	0050 | 	E
	SUBTR | 	0033 | 	-
	_INT_ | 	0051 | 	2
0019   
0020    *) {<--Orphaned closed comment is just '*' and ')' returned as separate tokens}
	MULTI | 	0031 | 	*
	CLOSP | 	0035 | 	)
0021            myString_1 : = "an unfinished string makes an error ;
	IDENT | 	0050 | 	myString_1
	COLON | 	0047 | 	:
	CONEQ | 	0042 | 	=
**** ERROR FOUND: Unterminated string found.
0022   test single #and two char tokens 
	INVAL | 	0099 | 	an unfinished string makes an error ;
	IDENT | 	0050 | 	test
	IDENT | 	0050 | 	single
	INVAL | 	0099 | 	#
	IDENT | 	0050 | 	and
	IDENT | 	0050 | 	two
	IDENT | 	0050 | 	char
	IDENT | 	0050 | 	tokens
0023      # /*^&%+-  some more (   ) (**) ;:=><>=<==<>,[]:.
	INVAL | 	0099 | 	#
	DIVID | 	0030 | 	/
	MULTI | 	0031 | 	*
	INVAL | 	0099 | 	^
	INVAL | 	0099 | 	&
	INVAL | 	0099 | 	%
	ADD__ | 	0032 | 	+
	SUBTR | 	0033 | 	-
	IDENT | 	0050 | 	some
	IDENT | 	0050 | 	more
	OPENP | 	0034 | 	(
	CLOSP | 	0035 | 	)
	SEMCO | 	0036 | 	;
	EQUAL | 	0037 | 	:=
	INVAL | 	0099 | 	><
	GREQL | 	0040 | 	>=
	LSEQL | 	0041 | 	<=
	CONEQ | 	0042 | 	=
	NTEQL | 	0043 | 	<>
	COMMA | 	0044 | 	,
	OPENB | 	0045 | 	[
	CLOSB | 	0046 | 	]
	INVAL | 	0099 | 	:.
0024 (* mixed in reserve words 
0025 below........................... *)  "but first is a good string"
	STRING | 	0053 | 	but first is a good string
0026   GOTO JumpOut;  INTEGER TO DO
	GOTO_ | 	0000 | 	GOTO
	IDENT | 	0050 | 	JumpOut
	SEMCO | 	0036 | 	;
	INTEG | 	0001 | 	INTEGER
	TO___ | 	0002 | 	TO
	DO___ | 	0003 | 	DO
0027 	begin  if not then that else nothing
	BEGIN | 	0011 | 	begin
	IF___ | 	0004 | 	if
	IDENT | 	0050 | 	not
	THEN_ | 	0005 | 	then
	IDENT | 	0050 | 	that
	ELSE_ | 	0006 | 	else
	IDENT | 	0050 | 	nothing
0028 THEN ELSE
	THEN_ | 	0005 | 	THEN
	ELSE_ | 	0006 | 	ELSE
0029 For I := 1 to 100.E7 of float do
	FOR__ | 	0007 | 	For
	IDENT | 	0050 | 	I
	EQUAL | 	0037 | 	:=
	_INT_ | 	0051 | 	1
	TO___ | 	0002 | 	to
	FLOAT | 	0052 | 	100.E7
	OF___ | 	0008 | 	of
	FLOAT | 	0023 | 	float
	DO___ | 	0003 | 	do
0030     WRITELN
	WRITE | 	0009 | 	WRITELN
0031     BEGIN
	BEGIN | 	0011 | 	BEGIN
0032     END
	END__ | 	0012 | 	END
0033   declare  ARRAY 
	IDENT | 	0050 | 	declare
	ARRAY | 	0025 | 	ARRAY
0034    VAR DOWHILE  module UNIT Label  RePeaT  UNTIL done = TRUE;
	VAR__ | 	0013 | 	VAR
	DWHIL | 	0014 | 	DOWHILE
	IDENT | 	0050 | 	module
	UNIT_ | 	0015 | 	UNIT
	LABEL | 	0016 | 	Label
	REPET | 	0017 | 	RePeaT
	UNTIL | 	0018 | 	UNTIL
	IDENT | 	0050 | 	done
	CONEQ | 	0042 | 	=
	IDENT | 	0050 | 	TRUE
	SEMCO | 	0036 | 	;
0035 
0036  PROCEDURE  FUNCTION DOWNTO does READLN   RETURN
	PROCE | 	0019 | 	PROCEDURE
	FUNCT | 	0021 | 	FUNCTION
	DOWNT | 	0020 | 	DOWNTO
	IDENT | 	0050 | 	does
	READL | 	0010 | 	READLN
	RETUR | 	0022 | 	RETURN
0037 	FLOAT
	FLOAT | 	0023 | 	FLOAT
0038 	STRING
	STRIN | 	0024 | 	STRING
0039 
0040 Beginning not reserve writeln.   !@#$%^&*()_+
	IDENT | 	0050 | 	Beginning
	IDENT | 	0050 | 	not
	IDENT | 	0050 | 	reserve
	WRITE | 	0009 | 	writeln
	PERIO | 	0048 | 	.
	INVAL | 	0099 | 	!
	INVAL | 	0099 | 	@
	INVAL | 	0099 | 	#
	INVAL | 	0099 | 	$
	INVAL | 	0099 | 	%
	INVAL | 	0099 | 	^
	INVAL | 	0099 | 	&
	MULTI | 	0031 | 	*
	OPENP | 	0034 | 	(
	CLOSP | 	0035 | 	)
	INVAL | 	0099 | 	_
	ADD__ | 	0032 | 	+
0041 sum := 0.0;
	IDENT | 	0050 | 	sum
	EQUAL | 	0037 | 	:=
	FLOAT | 	0052 | 	0.0
	SEMCO | 	0036 | 	;
0042 sum := sum + 2;
	IDENT | 	0050 | 	sum
	EQUAL | 	0037 | 	:=
	IDENT | 	0050 | 	sum
	ADD__ | 	0032 | 	+
	_INT_ | 	0051 | 	2
	SEMCO | 	0036 | 	;
0043 What if 2. is found?
	IDENT | 	0050 | 	What
	IF___ | 	0004 | 	if
	FLOAT | 	0052 | 	2.
	IDENT | 	0050 | 	is
	IDENT | 	0050 | 	found
	INVAL | 	0099 | 	?
0044 
0045 (* end of file comes
0046    before the end of this 
0047    comment-- Throw an Error!
0048 
0049 
0050                      
**** ERROR FOUND: Comment not terminated before End Of File
Done.
